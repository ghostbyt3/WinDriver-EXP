#include <Windows.h>
#include <winternl.h>
#include <TlHelp32.h>
#include <stdio.h>
#include <psapi.h>

typedef NTSTATUS(WINAPI* pNtQuerySystemInformation)(SYSTEM_INFORMATION_CLASS SystemInformationClass, PVOID SystemInformation, ULONG SystemInformationLength, PULONG ReturnLength);

DWORD64 GetBaseAddr(LPCWSTR name)
{
    BOOL status;
    LPVOID* pImageBase;
    DWORD ImageSize;
    WCHAR driverName[1024];
    DWORD64 driverBase = 0;

    status = EnumDeviceDrivers(nullptr, 0, &ImageSize);

    pImageBase = (LPVOID*)VirtualAlloc(nullptr, ImageSize, MEM_RESERVE | MEM_COMMIT, PAGE_READWRITE);

    status = EnumDeviceDrivers(pImageBase, ImageSize, &ImageSize);

    int driver_count = ImageSize / sizeof(pImageBase[0]);

    for (int i = 0; i < driver_count; i++) {
        GetDeviceDriverBaseNameW(pImageBase[i], driverName, sizeof(driverName) / sizeof(char));

        if (!wcscmp(name, driverName)) {
            driverBase = (DWORD64)pImageBase[i];
            break;
        }
    }

    return driverBase;
}

int main() {

    DWORD64 sedebug = 0x00d53a18;
    DWORD64 ntoskrnl_base = GetBaseAddr(L"ntoskrnl.exe");
    printf("[+] NT base address %llx\n", ntoskrnl_base);
    printf("[+] nt!SeDebugPrivilege virtual address %llx\n", ntoskrnl_base + sedebug);

}